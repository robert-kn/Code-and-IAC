what is this final assignment about?

This comprehensive lab is designed to provide hands-on experience in designing, implementing, and querying a data warehouse using PostgreSQL. It simulates a real-world scenario where you, as a data engineer, assist a waste management company in Brazil in managing and analyzing their solid waste collection data. The lab involves multiple stages, from designing and creating a star schema for the data warehouse, loading data, writing complex SQL queries for data aggregation, and creating materialized view for query optimization.

What I will learn:

Practical experience in data warehouse design: It provides hands-on experience in designing and implementing a star schema, which is crucial for any data warehousing project.

SQL Query writing skills: Enhances your ability to write complex SQL queries, including grouping sets, rollups, and cubes, essential for data analysis and reporting.

Data loading and transformation: Offers practice in data loading and transformation, an essential skill for managing data warehouses.

Real-world scenario applications: The scenario-based approach of the lab ensures that the skills acquired are relevant and applicable in real-world data warehousing and business intelligence projects.

Scenario

You are a data engineer hired by a solid waste management company. It collects and recycles solid waste across major cities in the country of Brazil. They operate hundreds of trucks of different types to collect and transport solid waste. The company would like to create a data warehouse so that it can create reports like:

Total waste collected per year per city
Total waste collected per month per city
Total waste collected per quarter per city
Total waste collected per year per trucktype
Total waste collected per trucktype per city
Total waste collected per trucktype per station per city

You will use your data warehousing skills to design and implement a data warehouse for the company.

Learning objectives
After completing this lab, you will be able to:

Design a data warehouse.
Load data into the data warehouse.
Create a materialized view.

About the data set
The data set you would be using in this assignment is not a real-life data set. It was programmatically created for this assignment purpose.

Prerequisites
You need to use PostgreSQL Database to proceed with the assignment.

This lab will guide you to understand how to create tables and load data in PostgreSQL using pgAdmin.

Exercise 1: Design a data warehouse
The solid waste management company has provided you the sample data they want to collect see sample-data.png

You will start your project by designing a Star Schema warehouse by identifying the columns for the various dimensions and fact tables in the schema.

Task 1: Design the dimension table MyDimDate

Write down the fields in the MyDimDate table in any text editor, one field per line. The company is looking at a granularity of day, which means they would like to have the ability to generate the report on a yearly, monthly, daily, and weekday basis.

dateid
date
year
quarter
quartername
month
monthname
day
weekday
weekdayname

Task 2: Design the dimension table MyDimWaste

Write down the fields in the MyDimWaste table in any text editor, one field per line.

Solution:
In this task, you will design the dimension table MyDimWaste to store waste-related information.

Fields in MyDimWaste table:

wastetypeid
wastetypename

Task 3: Design the dimension table MyDimZone
Write down the fields in the MyDimZone table in any text editor, one field per line.

zoneid
zonename
zonecity

Task 4: Design the fact table MyFactTrips
Write down the fields in the MyFactTrips table in any text editor, one field per line.

tripid
dateid
stationid
truckid
wastecollected


Exercise 2 - Create schema for data warehouse on PostgreSQL

In this exercise, you will create the tables you have designed in the previous exercise. Open pgAdmin and create a database named Project, then create the following tables.

Task 5: Create the dimension table MyDimDate
Create the MyDimDate table.

CREATE TABLE MyDimDate (
    dateid INT PRIMARY KEY,
    date DATE,
    year INT,
    quarter INT,
    quartername VARCHAR(4),
    month INT,
    monthname VARCHAR(20),
    day INT,
    weekday INT,
    weekdayname VARCHAR(20)
);

Task 6: Create the dimension table MyDimWaste
Create the MyDimWaste table.

CREATE TABLE MyDimWaste (
    wastetypeid INT PRIMARY KEY,
    wastetypename VARCHAR(20)
);

Task 7: Create the dimension table MyDimZone
Create the MyDimZone table.

CREATE TABLE MyDimZone (
    zoneid INT PRIMARY KEY,
    zonename VARCHAR(50),
    zonecity VARCHAR(20)
);

Task 8: Create the fact table MyFactTrips
Create the MyFactTrips table.

CREATE TABLE MyFactTrips (
    tripid INT PRIMARY KEY,
    FOREIGN KEY (dateid) REFERENCES  DimDate(dateid),
    FOREIGN KEY (stationid) REFERENCES DimStation(stationid),
    FOREIGN KEY (truckid) REFERENCES DimTruck(truckid),
    wastecollected DECIMAL (10, 2) NOT NULL
);