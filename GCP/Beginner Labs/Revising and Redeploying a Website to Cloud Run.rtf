{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red199\green199\blue224;}
{\*\expandedcolortbl;;\csgray\c100000;\cssrgb\c81961\c82353\c90196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33100\viewh17000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Launching a website is rarely a "one-and-done" situation. To remain relevant, website apps must be frequently updated. In this hands-on lab, you'll have an opportunity to explore how a website app currently deployed on Cloud Run is modified, re-compiled, re-built, and re-deployed.\
\
1. Retrieve and activate resource files\
\
git clone https://github.com/linuxacademy/content-launching-and-updating-a-website-using-cloud-run.git\
\
cd content-launching-and-updating-a-website-using-cloud-run/revising-and-redeploying-a-website-to-cloud-run/\
\
./setup.sh\
\
2. Containerise the app and store the disk image\
\
cd monolith\
\
gcloud builds submit --tag gcr.io/$\{GOOGLE_CLOUD_PROJECT\}/webcat:1.0.0\
\
3. Deploy the disk image to cloud run\
\
gcloud run deploy --image=gcr.io/$\{GOOGLE_CLOUD_PROJECT\}/webcat:1.0.0 --platform managed\
\
4. Update website and redeploy\
}