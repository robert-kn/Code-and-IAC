{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red199\green199\blue224;\red199\green199\blue224;
}
{\*\expandedcolortbl;;\csgray\c100000;\cssrgb\c81961\c82353\c90196;\cssrgb\c81961\c82353\c90196;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww33100\viewh17000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 A critical step in developing an app to deploy in Cloud Run is to containerize the files and store the resulting disk image in an accessible location. In this hands-on lab, you'll use Cloud Shell to initiate the Cloud Build process that will create a containerized disk image of your working files and store them in Google Cloud Container Registry.\
\
\pard\pardeftab720\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.png \width25320 \height15120 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\pardeftab720\partightenfactor0
\cf0 \
1. Retrieve and activate working files\
\
git clone https://github.com/ACloudGuru-Resources/content-launching-and-updating-a-website-using-cloud-run.git\
\
cd content-launching-and-updating-a-website-using-cloud-run/containerizing-and-registering-an-app-via-cloud-build/\
\
./setup.sh\
\
\
2. Containerise and store the new disk image\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \outl0\strokewidth0 \
gcloud services enable cloudbuild.googleapis.com\
\
cd monolith/\
\
gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/webcat:1.0.0 .\
\
\cb2 \outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 3. Verify the build\
\
}