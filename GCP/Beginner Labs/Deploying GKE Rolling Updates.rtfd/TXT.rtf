{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red199\green199\blue224;\red251\green0\blue98;
}
{\*\expandedcolortbl;;\csgray\c100000;\cssrgb\c81961\c82353\c90196;\cssrgb\c100000\c8627\c45882;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww33100\viewh17060\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 In this lab, you will be tasked with deploying a containerized web app for Helloly, a brand new internet start-up that specialises in saying "Hello world!" as a service. To keep investors happy, you will quickly deploy version 1.0 of the app, using GKE best practices. Soon after, the dev team will ask you to perform a rolling update to version 2.0 of Helloly. However, this version will perform poorly in focus groups and social media trends, so you must use Kubernetes-native tools to roll back the deployment to the previous version.\
\
\pard\pardeftab720\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.png \width21180 \height12280 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\pardeftab720\partightenfactor0
\cf0 \
1. Create the GKE cluster\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \outl0\strokewidth0 gcloud services enable container.googleapis.com\
\
gcloud container clusters create test-cluster --zone us-central1-c --enable-autoscaling  --num-nodes 2 --node-locations us-central1-b,us-central1-c --machine-type e2-standard-2\
\
gcloud container clusters get-credentials test-cluster --zone us-central1-c --project $DEVSHELL_PROJECT_ID\cb2 \outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \
2. Deploy the hello world application\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \outl0\strokewidth0 git clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples.git\
\
cd kubernetes-engine-samples/quickstarts/hello-app/manifests/\
\
Deploy the deployment\
\
Replace the placeholder text from the service YAML using the following command\
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \outl0\strokewidth0 \strokec4 sed -i '/YOUR.IP.ADDRESS.HERE/d' ./helloweb-service-static-ip.yaml\cb2 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \outl0\strokewidth0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 3. Perform a rolling update and a rollback\
\
kubectl set image deployment/helloweb hello-app=gcr.io/google-samples/hello-app:2.0\
\
Make a record of the change\
\
kubectl annotate deployment/helloweb kubernetes.io/change-cause="kubectl set image deployment/helloweb hello-app=gcr.io/google-samples/hello-app:2.0"\
\
kubectl rollout status deployment/helloweb\
\
kubectl rollout undo deployment/helloweb\
\
kubectl rollout history deployment/helloweb\
\
kubectl rollout undo deployment/helloweb --to-revision=2}