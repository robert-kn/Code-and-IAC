{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red199\green199\blue224;}
{\*\expandedcolortbl;;\csgray\c100000;\cssrgb\c81961\c82353\c90196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33100\viewh17000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 In this lab, we will take three disconnected VPC networks and enable private RFC 1918 communication via network peering on GCP. Network peering allows you to take any Google Cloud VPC and establish a private network connection with another GCP VPC so traffic between them does not touch the public internet. Assumes 3 networks have already been created (each with a subnet), along with a gce instances in each\
\
1. Establish network peering connections between network 1 and network 2\
\
gcloud compute networks peerings create network-1-2 --network=network-1 --peer-network=network-2\
\
2. Establish network peering connections between network 1 and network 3\
\
gcloud compute networks peerings create network-1-3 --network=network-1 --peer-network=network-3\
\
3. Create firewall rule for ICMP access \
\
gcloud compute firewall-rules create icmp-allow --direction INGRESS --network network-3 --action ALLOW --rules ICMP --source-ranges=10.0.1.0/24,10.0.2.0/24,10.0.3.0/2\
\
4. Test private network connectivity between peered networks}